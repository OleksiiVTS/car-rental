{"version":3,"file":"static/js/36.65740e93.chunk.js","mappings":"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","sources":["components/Modal/Modal.jsx","../node_modules/nanoid/index.browser.js","components/CarListElement/CarListElement.jsx","components/Filter/Filter.jsx","pages/CarList/CarList.jsx"],"sourcesContent":["import React from 'react';\nimport { nanoid } from 'nanoid';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nconst Modal = ({ data, closeModal }) => {\n  const dispatch = useDispatch();\n  const conditions = data.rentalConditions.split('\\n');\n  const mileageFull = data.mileage.toString();\n  const mileage = `${mileageFull.substring(\n    0,\n    mileageFull.length - 3\n  )},${mileageFull.substring(mileageFull.length - 3)}`;\n\n  useEffect(() => {\n    document.body.style.overflow = 'hidden';\n\n    const handleKeyDown = event => {\n      if (event.code === 'Escape') {\n        closeModal();\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      document.body.style.overflow = 'unset';\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [dispatch, closeModal]);\n\n  return (\n    <div>\n      <div>\n        <h1>Modal</h1>\n        <button type=\"button\" onClick={closeModal}>\n          X\n        </button>\n        <div>\n          <img src={data.img} alt=\"General view of the car\" />\n          <div>\n            <p>{data.make}</p>\n            <p>{data.model}</p>\n            <p>{data.year}</p>\n          </div>\n          <p>\n            {data.address} | {data.rentalCompany} | {data.make} | {data.model} |{' '}\n            {data.type} | {mileage} | {data.fuelConsumption} | {data.engineSize}\n          </p>\n          <p>{data.description}</p>\n          <div>\n            <h5>Accessories and functionalities:</h5>\n            <p>{data.accessories.join(' | ')}</p>\n            <p>{data.functionalities.join(' | ')}</p>\n          </div>\n          <div>\n            <h5>Rental Conditions:</h5>\n            <ul>\n              {conditions.map(condition => (\n                <li key={nanoid()}>\n                  <p>{condition}</p>\n                </li>\n              ))}\n              <li>\n                <p>\n                  Mileage: <span>{mileage}</span>\n                </p>\n              </li>\n              <li>\n                <p>\n                  Price: <span>{data.rentalPrice}</span>\n                </p>\n              </li>\n            </ul>\n          </div>\n        </div>\n        <a href=\"tel:+380730000000\">Rental car</a>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import React from 'react';\nimport Modal from 'components/Modal/Modal';\nimport { useState } from 'react';\n\nconst CarListElement = ({ data = [] }) => {\n  const [openModal, setOpenModal] = useState(false);\n  const [carItem, setCarItem] = useState({});\n\n  const mileage = data => {\n    const mileageFull = data.toString();\n    const mileage = `${mileageFull.substring(\n      0,\n      mileageFull.length - 3\n    )},${mileageFull.substring(mileageFull.length - 3)}`;\n    return mileage;\n  };\n  const handelClick = car => {\n    setCarItem(car);\n    setOpenModal(true);\n  };\n  const closeModal = () => setOpenModal(false);\n\n  return (\n    <div>\n      <h4>CarListElement</h4>\n      {openModal && <Modal data={carItem} closeModal={closeModal} />}\n      <ul>\n        {data.map(car => (\n          <li key={car.id}>\n            <img src={car.img} alt=\"General view of the car\" />\n            <input type=\"checkbox\" />\n            <div>\n              <div>\n                <p>{car.make}</p>\n                <p>{car.model}</p>\n                <p>{car.year}</p>\n              </div>\n              <div>\n                <p>{car.rentalPrice}</p>\n              </div>\n            </div>\n            <p>\n              {car.address} | {car.rentalCompany} | {car.make} | {car.model} |{' '}\n              {car.type} | {mileage(car.mileage)}\n            </p>\n            <button type=\"button\" onClick={() => handelClick(car)}>\n              Learn more\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default CarListElement;\n","import React from 'react';\n\nconst Filter = () => {\n  return (\n    <div>\n      <h1>Filter</h1>\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\nimport Filter from 'components/Filter/Filter';\nimport CarListElement from 'components/CarListElement/CarListElement';\nimport { useCars } from 'redux/useCars';\n\nconst CarList = () => {\n  const { isCars } = useCars();\n\n  return (\n    <section>\n      <h1>CarList</h1>\n      <Filter></Filter>\n      <CarListElement data={isCars}></CarListElement>\n    </section>\n  );\n};\n\nexport default CarList;\n"],"names":["data","closeModal","dispatch","useDispatch","conditions","rentalConditions","split","mileageFull","mileage","toString","substring","length","useEffect","document","body","style","overflow","handleKeyDown","event","code","window","addEventListener","removeEventListener","type","onClick","src","img","alt","make","model","year","address","rentalCompany","fuelConsumption","engineSize","description","accessories","join","functionalities","map","condition","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toUpperCase","nanoid","rentalPrice","href","useState","openModal","setOpenModal","carItem","setCarItem","car","handelClick","isCars","useCars"],"sourceRoot":""}